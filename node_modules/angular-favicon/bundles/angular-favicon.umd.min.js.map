{"version":3,"sources":["../../../projects/angular-favicon/src/lib/angular-favicon.service.ts"],"names":["AngularFaviconService","_doc","rendererFactory","_this","this","darkScheme","prefersColorScheme$","fromEventPattern","handler","window","matchMedia","addListener","pipe","pluck","renderer","createRenderer","prototype","getFavicon","querySelector","setFavicon","iconURL","altIconURL","link","createElement","currentLinkHref","subscribeToChangesInTheme","matches","appendLinkTag","subscriptionToColorScheme","subscribe","isDarkTheme","type","rel","href","head","getElementsByTagName","appendChild","ngOnDestroy","unsubscribe","Injectable","args","providedIn","Inject","DOCUMENT","RendererFactory2"],"mappings":"wxBAcE,SAAAA,EAAsCC,EAAmBC,GAAzD,IAAAC,EAAAC,KAAsCA,KAAAH,KAAAA,EAAmBG,KAAAF,gBAAAA,EAIjDE,KAAAC,WAAa,8BAEbD,KAAAE,oBAAsBC,EAAAA,kBAAgB,SAACC,GAAW,OAAAC,OAAOC,WAAWP,EAAKE,YAAYM,YAAW,MAA4BC,KAClIC,EAAAA,MAAM,YANNT,KAAKU,SAAWZ,EAAgBa,eAAe,KAAM,aAYvDf,EAAAgB,UAAAC,WAAA,WACE,OAAOb,KAAKH,KAAKiB,cAAc,sBAQjClB,EAAAgB,UAAAG,WAAA,SAAWC,EAAiBC,OACpBC,EAAOlB,KAAKa,cAAgBb,KAAKU,SAASS,cAAc,QAC1DC,EAAkBJ,EAElBC,IACFjB,KAAKqB,0BAA0BH,EAAMF,EAASC,GAE1CZ,OAAOC,WAAWN,KAAKC,YAAYqB,UACrCF,EAAkBH,IAItBjB,KAAKuB,cAAcL,EAAME,IASnBxB,EAAAgB,UAAAS,0BAAA,SAA0BH,EAAWF,EAAiBC,GAAtD,IAAAlB,EAAAC,KACNA,KAAKwB,0BAA4BxB,KAAKE,oBAAoBuB,WAAS,SAACC,GAC9DA,EACF3B,EAAKwB,cAAcL,EAAMD,GAEzBlB,EAAKwB,cAAcL,EAAMF,OAUvBpB,EAAAgB,UAAAW,cAAA,SAAcL,EAAWF,GAC/BE,EAAKS,KAAO,eACZT,EAAKU,IAAM,gBACXV,EAAKW,KAAOb,MACNc,EAAO9B,KAAKH,KAAKkC,qBAAqB,QAAQ,GACpD/B,KAAKU,SAASsB,YAAYF,EAAMZ,IAGlCtB,EAAAgB,UAAAqB,YAAA,WACMjC,KAAKwB,2BACPxB,KAAKwB,0BAA0BU,wCA1EpCC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,6EAKCC,EAAAA,OAAMF,KAAA,CAACG,EAAAA,mBAd6BC,EAAAA","sourcesContent":["import { Injectable, Inject, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEventPattern, Subscription } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n\n/**\n * A service to set the favicon.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularFaviconService implements OnDestroy {\n  private renderer: Renderer2;\n\n  constructor(@Inject(DOCUMENT) private _doc: any, private rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  private darkScheme = '(prefers-color-scheme:dark)';\n  private subscriptionToColorScheme: Subscription;\n  private prefersColorScheme$ = fromEventPattern(handler => window.matchMedia(this.darkScheme).addListener(handler as EventListener)).pipe(\n    pluck('matches')\n  );\n\n  /**\n   * Get the favicon of the current HTML document.\n   */\n  getFavicon() {\n    return this._doc.querySelector(\"link[rel*='icon']\");\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param iconURL - Default favicon URL\n   * @param altIconURL - Optional, dark theme favicon URL\n   */\n  setFavicon(iconURL: string, altIconURL?: string) {\n    const link = this.getFavicon() || this.renderer.createElement('link');\n    let currentLinkHref = iconURL;\n\n    if (altIconURL) {\n      this.subscribeToChangesInTheme(link, iconURL, altIconURL);\n\n      if (window.matchMedia(this.darkScheme).matches) {\n        currentLinkHref = altIconURL;\n      }\n    }\n\n    this.appendLinkTag(link, currentLinkHref);\n  }\n\n  /**\n   * Subscribe to the theme color changes in browser/OS and apply the appropiate favicon\n   * @param link - DOM element\n   * @param iconURL - Default favicon URL\n   * @param altIconURL - Optional, dark theme favicon URL\n   */\n  private subscribeToChangesInTheme(link: any, iconURL: string, altIconURL: string) {\n    this.subscriptionToColorScheme = this.prefersColorScheme$.subscribe(isDarkTheme => {\n      if (isDarkTheme) {\n        this.appendLinkTag(link, altIconURL);\n      } else {\n        this.appendLinkTag(link, iconURL);\n      }\n    });\n  }\n\n  /**\n   * Append new link to HEAD\n   * @param link - DOM element\n   * @param iconURL - favicon URL\n   */\n  private appendLinkTag(link: any, iconURL: string) {\n    link.type = 'image/x-icon';\n    link.rel = 'shortcut icon';\n    link.href = iconURL;\n    const head = this._doc.getElementsByTagName('head')[0];\n    this.renderer.appendChild(head, link);\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptionToColorScheme) {\n      this.subscriptionToColorScheme.unsubscribe();\n    }\n  }\n}\n"]}